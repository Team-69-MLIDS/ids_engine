lib,arg_name,default,description
lightgbm,boosting_type,No default,"'gbdt', traditional Gradient Boosting Decision Tree.
'dart', Dropouts meet Multiple Additive Regression Trees.
'rf', Random Forest."
lightgbm,num_leaves,No default,Maximum tree leaves for base learners.
lightgbm,max_depth,No default,"Maximum tree depth for base learners, <=0 means no limit."
lightgbm,learning_rate,No default,"Boosting learning rate.
You can use ``callbacks`` parameter of ``fit`` method to shrink/adapt learning rate
in training using ``reset_parameter`` callback.
Note, that this will ignore the ``learning_rate`` argument in training."
lightgbm,n_estimators,No default,Number of boosted trees to fit.
lightgbm,subsample_for_bin,No default,Number of samples for constructing bins.
lightgbm,objective,No default,"Specify the learning task and the corresponding learning objective or
a custom objective function to be used (see note below).
Default: 'regression' for LGBMRegressor, 'binary' or 'multiclass' for LGBMClassifier, 'lambdarank' for LGBMRanker."
lightgbm,class_weight,No default,"Weights associated with classes in the form ``{class_label: weight}``.
Use this parameter only for multi-class classification task;
for binary classification task you may use ``is_unbalance`` or ``scale_pos_weight`` parameters.
Note, that the usage of all these parameters will result in poor estimates of the individual class probabilities.
You may want to consider performing probability calibration
(https://scikit-learn.org/stable/modules/calibration.html) of your model.
The 'balanced' mode uses the values of y to automatically adjust weights
inversely proportional to class frequencies in the input data as ``n_samples / (n_classes * np.bincount(y))``.
If None, all classes are supposed to have weight one.
Note, that these weights will be multiplied with ``sample_weight`` (passed through the ``fit`` method)
if ``sample_weight`` is specified."
lightgbm,min_split_gain,No default,Minimum loss reduction required to make a further partition on a leaf node of the tree.
lightgbm,min_child_weight,No default,Minimum sum of instance weight (Hessian) needed in a child (leaf).
lightgbm,min_child_samples,No default,Minimum number of data needed in a child (leaf).
lightgbm,subsample,No default,Subsample ratio of the training instance.
lightgbm,subsample_freq,No default,"Frequency of subsample, <=0 means no enable."
lightgbm,colsample_bytree,No default,Subsample ratio of columns when constructing each tree.
lightgbm,reg_alpha,No default,L1 regularization term on weights.
lightgbm,reg_lambda,No default,L2 regularization term on weights.
lightgbm,random_state,seeds,"Random number seed.
If int, this number is used to seed the C++ code.
If RandomState or Generator object (numpy), a random integer is picked based on its state to seed the C++ code.
If None, default seeds in C++ code are used."
lightgbm,n_jobs,number,"Number of parallel threads to use for training (can be changed at prediction time by
passing it as an extra keyword argument).

For better performance, it is recommended to set this to the number of physical cores
in the CPU.

Negative integers are interpreted as following joblib's formula (n_cpus + 1 + n_jobs), just like
scikit-learn (so e.g. -1 means using all threads). A value of zero corresponds the default number of
threads configured for OpenMP in the system. A value of ``None`` (the default) corresponds
to using the number of physical cores in the system (its correct detection requires
either the ``joblib`` or the ``psutil`` util libraries to be installed).

.. versionchanged:: 4.0.0"
lightgbm,importance_type,No default,"The type of feature importance to be filled into ``feature_importances_``.
If 'split', result contains numbers of times the feature is used in a model.
If 'gain', result contains total gains of splits which use the feature."
lightgbm,**kwargs,No default,"Other parameters for the model.
Check http://lightgbm.readthedocs.io/en/latest/Parameters.html for more parameters.

.. warning::

    \*\*kwargs is not supported in sklearn, it may cause unexpected issues."
