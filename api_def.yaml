openapi: 3.0.3
info:
  title: IDS API
  description: The api for the ids playground
  contact:
    name: Team 69
    url: "https://github.com/team-69-mlids"
    email: tmc190005@utdallas.edu
  version: 0.1.1

servers: 
- url: https://localhost:5000/api
  description: Local Server 

paths:
  "/datasets":
    get:
      tags: ["Configuration"]
      summary: Returns all available datasets
      description: Returns all available datasets
      operationId: getDatasets
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dataset"
                
  "/model_names":
    get:
      tags: ["Configuration"]
      summary: Returns list of names of models that can be ran on the engine
      description: Get model names 
      operationId: getModelNames
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/algorithm"
  "/run":
    get:
      tags: ["Data Retrieval"]
      description: Get Runs stored in the database. Query parameters can be used to filter the results on date, time frame, and run id.
      operationId: getRuns
      parameters:
        - in: query
          name: from
          schema:
            type: string
          description: Starting date to search
        - in: query
          name: till
          schema:
            type: string
          description: Ending date to search
        - in: query
          name: runid
          schema:
            type: string
          description: Run ID to match
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/run"
    post:
      tags: ["Execution"]
      summary: Submit hyperparameters and train the selected algorithm
      description: Submit hyperparameters and train the selected algorithm
      operationId: submitAndExecute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model_name:
                  required: true
                  type: string
                runid: 
                  type: string
                dataset: 
                  type: string

                hyperparameters:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      type: object
                      properties:
                        parameter_name:
                          type: string
                          description: The key of the key-value pair
                        value:
                          type: string
                          description: The value of the key-value pair
                    
                    
      responses: 
        "200":
          description: Ok
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/run"
                
  "/hyperparameters":
      get: 
        tags: [ "Data Retrieval" ]
        description: get all hyperparameters
        operationId: getHyperparameters
        parameters:
        - in: query
          name: model 
          schema:
            type: string
          description: Name of the model to retrieve hyperparameters for
          required: false
        responses:
          "200": 
            description: ok
            content: 
              application/json:
                schema:
                  type: object  
                  additionalProperties:
                    type: array
                    items:  
                        $ref: "#/components/schemas/hyperparameter_def"
            
    
                
  

components:
  schemas:
    dataset:
      type: object
      properties:
        filename:
          type: string
          description: Displayable filename
        full_path:
          type: string
          description: The entire path to this file
          
    algorithm:
      type: object
      example: 
        algorithms: ["LCCDE", "Treebased"]
      properties:
        algorithms:
          type: array
          description: Names of the algorithm
          
    run:
      type: object
      properties:
        confusion_matrices:
          type: object
          description: confusion matrices for each learner
          additionalProperties:
            type: array
            description: confusion matrix

        ensemble:
          type: object
          description: Evaluation results for different models in the ensemble.
          additionalProperties:
            type: array
            description: Evaluation results for each algorithm used in the model.
            items:
              type: object
              properties:
                f1_score: 
                   type: number
                   description: performance metric
                precision: 
                   type: number
                   description: performance metric
                recall: 
                    type: number
                    description: performance metric
                macro_avg: 
                    type: number
                    description: performance metric
                weighted_avg: 
                    type: number
                    description: performance metric
        model:
          type: string
          description: Name of the model used 
        runid:
          type: string
          description: RunID provided by user when submitted
        timestamp: 
          type: string
          description: Date of submission in `mm-dd-yyyy hh:mm::ss` format
    
    hyperparameter_def:
        type: object
        properties:
            default:
                type: string
            description: 
                type: string
            name:
                type: string
            optional:
                type: boolean
            

            
        #       type: object
        #       description: result 
        #       properties:
        #         algorithm_name:
        #           type: string
        #           description: the algorithm (eg, XGboost)
        #         confusion_matrix: 
        #           type: array
        #           items: 
        #             type: number
        #         f1_score: 
        #           type: number
        #           description: performance metric
        #         precision: 
        #           type: number
        #           description: performance metric
        #         recall: 
        #           type: number
        #           description: performance metric
        #         macro_avg: 
        #           type: number
        #           description: performance metric
        #         weighted_avg: 
        #           type: number
        #           description: performance metric
        # 
